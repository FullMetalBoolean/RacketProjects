#reader(lib"read.ss""wxme")WXME0108 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 7.0 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 33 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 93
(
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-sni"
 #"pclass-wxme.ss\" \"framework\"))\0"
) 0 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 29 #"drscheme:bindings-snipclass%\0"
1 0 101
(
 #"((lib \"ellipsis-snip.rkt\" \"drracket\" \"private\") (lib \"ellipsi"
 #"s-snip-wxme.rkt\" \"drracket\" \"private\"))\0"
) 2 0 88
(
 #"((lib \"pict-snip.rkt\" \"drracket\" \"private\") (lib \"pict-snip.r"
 #"kt\" \"drracket\" \"private\"))\0"
) 0 0 55
#"((lib \"snip.rkt\" \"pict\") (lib \"snip-wxme.rkt\" \"pict\"))\0"
1 0 34 #"(lib \"bullet-snip.rkt\" \"browser\")\0"
0 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 29 #"drclickable-string-snipclass\0"
0 0 26 #"drracket:spacer-snipclass\0"
0 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 1 6 #"wxloc\0"
          0 0 55 0 1 #"\0"
0 75 1 #"\0"
0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 12 #"Courier New\0"
0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 38
#"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 35
#"framework:syntax-color:scheme:text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 49
#"framework:syntax-color:scheme:hash-colon-keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 16
#"Misspelled Text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 28
#"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 37
#"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 37 #"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 38
#"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 100 0 0 0 0 -1
-1           0 3075 0 4 3 85
(
 #";; The first three lines of this file were inserted by DrRacket. The"
 #"y record metadata"
) 0 0 4 29 1 #"\n"
0 0 4 3 85
(
 #";; about the language level of this file in a form that our tools ca"
 #"n easily process."
) 0 0 4 29 1 #"\n"
0 0 4 3 188
(
 #"#reader(lib \"htdp-advanced-reader.ss\" \"lang\")((modname |week14%2"
 #"0(1) (1)|) (read-case-sensitive #t) (teachpacks ()) (htdp-settings #"
 #"(#t constructor repeating-decimal #t #t none #f () #f)))"
) 0 0 4 29 1 #"\n"
0 0 17 3 22 #";5580893 Jeremy Reuwer"
0 0 24 29 1 #"\n"
0 0 17 3 17 #";5741181 Sun Kang"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 14 #"; Typing Tutor"
0 0 24 29 1 #"\n"
0 0 17 3 34 #"; Final Project CISC 106 Fall 2018"
0 0 24 29 1 #"\n"
0 0 17 3 60
#"; Authors: The class of CISC 106 Fall 2018 and the professor"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 7 #"require"
0 0 24 3 1 #" "
0 0 14 3 11 #"2htdp/image"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 7 #"require"
0 0 24 3 1 #" "
0 0 14 3 14 #"2htdp/universe"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";Constants"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 11 #"screen-size"
0 0 24 3 1 #" "
0 0 21 3 3 #"500"
0 0 24 3 1 #")"
0 0 17 3 27 #";width and height of screen"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 11 #"half-screen"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 11 #"screen-size"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #"))"
0 0 17 3 19 #";midpoint of screen"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"background"
0 0 24 3 2 #" ("
0 0 14 3 9 #"rectangle"
0 0 24 3 1 #" "
0 0 14 3 11 #"screen-size"
0 0 24 3 1 #" "
0 0 14 3 11 #"screen-size"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 19 3 7 #"\"black\""
0 0 24 3 3 #")) "
0 0 17 3 24 #";static background image"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 11 #"letter-size"
0 0 24 3 1 #" "
0 0 21 3 2 #"30"
0 0 24 3 2 #") "
0 0 17 3 30 #";size of letters used for game"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 12 #"counter-size"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 2 #") "
0 0 17 3 28 #";size of the counter numbers"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 18 #"start-letter-speed"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #") "
0 0 17 3 50 #";the starting velocity of letters falling from top"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"frame-rate"
0 0 24 3 1 #" "
0 0 21 3 4 #"1/60"
0 0 24 3 2 #") "
0 0 17 3 19 #";desired frame rate"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 13 #"letter-colors"
0 0 24 3 2 #" ("
0 0 14 3 6 #"vector"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 1 #" "
0 0 19 3 8 #"\"orange\""
0 0 24 3 1 #" "
0 0 19 3 8 #"\"yellow\""
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 1 #" "
0 0 19 3 8 #"\"violet\""
0 0 24 3 3 #")) "
0 0 17 3 34 #";the colors of the falling letters"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 117
(
 #";-------------------------------------------------------------------"
 #"-------------------------------------------------"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 49 #"; Type definition: Character Number Number String"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 24 3 1 #" "
0 0 14 3 15 #"letter-position"
0 0 24 3 2 #" ("
0 0 14 3 6 #"letter"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 1 #" "
0 0 14 3 5 #"color"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 17 3 67
#"; Type definition: ListOfletterposition Number Number Number Number"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 24 3 1 #" "
0 0 14 3 5 #"World"
0 0 24 3 2 #" ("
0 0 14 3 7 #"letters"
0 0 24 3 1 #" "
0 0 14 3 4 #"time"
0 0 24 3 1 #" "
0 0 14 3 15 #"letters-correct"
0 0 24 3 1 #" "
0 0 14 3 5 #"score"
0 0 24 3 1 #" "
0 0 14 3 5 #"speed"
0 0 24 3 3 #")) "
0 0 17 3 76
(
 #";creates a struct called World with letter, time, and position as pa"
 #"rameters"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 11 #"start-world"
0 0 24 3 1 #" "
0 0 17 3 21 #";start-world is a... "
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 10 #"make-World"
0 0 24 3 1 #" "
0 0 17 3 20 #";a world that has..."
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 20 #"make-letter-position"
0 0 24 3 1 #" "
0 0 21 3 3 #"#\\D"
0 0 24 3 1 #" "
0 0 14 3 11 #"half-screen"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 3 #")) "
0 0 17 3 115
(
 #"; a list of letter position (which the letter position has the chara"
 #"cter D, D's x and y position, and D's color)..."
) 0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 14 3 18 #"start-letter-speed"
0 0 24 3 3 #")) "
0 0 17 3 67
#";and time, the number of letters correct, and the score of the game"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 117
(
 #";-------------------------------------------------------------------"
 #"-------------------------------------------------"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 45 #";Purpose: convert number to alphabetic letter"
0 0 24 29 1 #"\n"
0 0 17 3 31 #";Signature: Number -> Character"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";Examples:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 9 #"converter"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #") "
0 0 21 3 3 #"#\\A"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 9 #"converter"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 2 #") "
0 0 21 3 3 #"#\\E"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 34 #";Stub: (define (converter num) -1)"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 6 #";Code:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 9 #"converter"
0 0 24 3 1 #" "
0 0 14 3 3 #"num"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 13 #"integer->char"
0 0 24 3 1 #" "
0 0 17 3 51 #";case where we change an integer to a character ..."
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 17 3 40 #";where the integer is the addition of..."
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 13 #"char->integer"
0 0 24 3 1 #" "
0 0 21 3 3 #"#\\A"
0 0 24 3 2 #") "
0 0 17 3 100
(
 #";the character of A changed to an integer which means that this turn"
 #"s 0 into A                      "
) 0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 14 3 3 #"num"
0 0 24 3 1 #")"
0 0 17 3 9 #"; and num"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   )"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  )"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"alphabet"
0 0 24 3 1 #" "
0 0 17 3 25 #"; define alphabet to be a"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"build-vector"
0 0 24 3 1 #" "
0 0 21 3 2 #"26"
0 0 24 3 1 #" "
0 0 14 3 9 #"converter"
0 0 24 3 2 #"))"
0 0 17 3 54 #"; vector containing all of the letters of the alphabet"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 117
(
 #";-------------------------------------------------------------------"
 #"-------------------------------------------------"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 55 #";Purpose: To have 3 letters displayed on the background"
0 0 24 29 1 #"\n"
0 0 17 3 31 #";Signature: List Image -> Image"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";Examples:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"draw-letters"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #") "
0 0 14 3 10 #"background"
0 0 24 3 2 #") "
0 0 14 3 10 #"background"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"draw-letters"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 20 #"make-letter-position"
0 0 24 3 1 #" "
0 0 21 3 3 #"#\\D"
0 0 24 3 1 #" "
0 0 14 3 11 #"half-screen"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 3 #")) "
0 0 14 3 10 #"background"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 10 #"overlay/xy"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 4 #"text"
0 0 24 3 2 #" ("
0 0 14 3 6 #"string"
0 0 24 3 1 #" "
0 0 21 3 3 #"#\\D"
0 0 24 3 2 #") "
0 0 14 3 11 #"letter-size"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 2 #"-1"
0 0 24 3 1 #" "
0 0 14 3 11 #"half-screen"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"               "
0 0 21 3 1 #"0"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"               "
0 0 14 3 10 #"background"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 44 #"; Stub : (define (draw-letters lst img) \"A\")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 6 #";Code:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 12 #"draw-letters"
0 0 24 3 1 #" "
0 0 14 3 3 #"lst"
0 0 24 3 1 #" "
0 0 14 3 3 #"img"
0 0 24 3 2 #") "
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 3 1 #" "
0 0 17 3 26 #";a set of conditions of..."
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    (("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 3 #"lst"
0 0 24 3 2 #") "
0 0 14 3 3 #"img"
0 0 24 3 2 #") "
0 0 17 3 39 #";where it lst is empty, then output img"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 4 #"else"
0 0 24 3 1 #" "
0 0 17 3 21 #";otherwise, output..."
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 10 #"overlay/xy"
0 0 24 3 1 #" "
0 0 17 3 21 #";the overlaying of..."
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 4 #"text"
0 0 24 3 2 #" ("
0 0 14 3 6 #"string"
0 0 24 3 2 #" ("
0 0 14 3 22 #"letter-position-letter"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 3 #"lst"
0 0 24 3 4 #"))) "
0 0 17 3 84
(
 #";a text, which is the first character of letter-position-letter turn"
 #"ed into a string"
) 0 0 24 29 1 #"\n"
0 0 24 3 12 #"            "
0 0 14 3 11 #"letter-size"
0 0 24 3 1 #" "
0 0 17 3 44 #";with the size of the text being letter-size"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 21 #"letter-position-color"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 3 #"lst"
0 0 24 3 3 #")) "
0 0 17 3 61
#";and the color being the first color of letter-position-color"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            )"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 2 #"-1"
0 0 24 3 2 #" ("
0 0 14 3 17 #"letter-position-x"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 3 #"lst"
0 0 24 3 4 #"))) "
0 0 17 3 67
#";x position is the first letter-position-x of lst  multiplied by -1"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 2 #"-1"
0 0 24 3 2 #" ("
0 0 14 3 17 #"letter-position-y"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 3 #"lst"
0 0 24 3 4 #"))) "
0 0 17 3 66
#";y position is the first letter-position-y of lst multiplied by -1"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 12 #"draw-letters"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 3 #"lst"
0 0 24 3 2 #") "
0 0 14 3 3 #"img"
0 0 24 3 2 #") "
0 0 17 3 77
(
 #";and the text is on top of the recursion of draw-letters with the re"
 #"st of lst"
) 0 0 24 29 1 #"\n"
0 0 24 3 7 #"      )"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     )"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    )"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  )"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 117
(
 #";-------------------------------------------------------------------"
 #"-------------------------------------------------"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 25 #";Purpose: Show background"
0 0 24 29 1 #"\n"
0 0 17 3 26 #";Signature: World -> Image"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";Examples:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 10 #"draw-scene"
0 0 24 3 1 #" "
0 0 14 3 11 #"start-world"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 12 #"draw-letters"
0 0 24 3 2 #" ("
0 0 14 3 13 #"World-letters"
0 0 24 3 1 #" "
0 0 14 3 11 #"start-world"
0 0 24 3 13 #")            "
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                            ("
0 0 14 3 13 #"overlay/align"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"left\""
0 0 24 3 1 #" "
0 0 19 3 5 #"\"top\""
0 0 24 29 1 #"\n"
0 0 24 3 44 #"                                           ("
0 0 14 3 4 #"text"
0 0 24 3 2 #" ("
0 0 14 3 14 #"number->string"
0 0 24 3 2 #" ("
0 0 14 3 5 #"floor"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 14 3 10 #"frame-rate"
0 0 24 3 2 #" ("
0 0 14 3 10 #"World-time"
0 0 24 3 1 #" "
0 0 14 3 11 #"start-world"
0 0 24 3 5 #")))) "
0 0 14 3 12 #"counter-size"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"gray\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 44 #"                                           ("
0 0 14 3 13 #"overlay/align"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"right\""
0 0 24 3 1 #" "
0 0 19 3 5 #"\"top\""
0 0 24 29 1 #"\n"
0 0 24 3 59
#"                                                          ("
0 0 14 3 4 #"text"
0 0 24 3 2 #" ("
0 0 14 3 14 #"number->string"
0 0 24 3 2 #" ("
0 0 14 3 21 #"World-letters-correct"
0 0 24 3 1 #" "
0 0 14 3 11 #"start-world"
0 0 24 3 2 #"))"
0 0 14 3 12 #"counter-size"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"gray\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 59
#"                                                          ("
0 0 14 3 13 #"overlay/align"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"center\""
0 0 24 3 1 #" "
0 0 19 3 5 #"\"top\""
0 0 24 29 1 #"\n"
0 0 24 3 74
(
 #"                                                                    "
 #"     ("
) 0 0 14 3 4 #"text"
0 0 24 3 2 #" ("
0 0 14 3 14 #"number->string"
0 0 24 3 2 #" ("
0 0 14 3 11 #"World-score"
0 0 24 3 1 #" "
0 0 14 3 11 #"start-world"
0 0 24 3 3 #")) "
0 0 14 3 12 #"counter-size"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"gray\""
0 0 24 3 55 #")                                                      "
0 0 24 29 1 #"\n"
0 0 24 3 73
(
 #"                                                                    "
 #"     "
) 0 0 14 3 10 #"background"
0 0 24 3 2 #") "
0 0 17 3 22 #";overlaying background"
0 0 24 29 1 #"\n"
0 0 24 3 59
#"                                                          )"
0 0 24 29 1 #"\n"
0 0 24 3 44 #"                                           )"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                            )"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              )"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 41 #";Stub: (define (draw-background wrld) -1)"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 6 #";Code:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 10 #"draw-scene"
0 0 24 3 1 #" "
0 0 14 3 4 #"wrld"
0 0 24 3 1 #")"
0 0 17 3 28 #"; define draw-scene to be..."
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"draw-letters"
0 0 24 3 2 #" ("
0 0 14 3 13 #"World-letters"
0 0 24 3 1 #" "
0 0 14 3 4 #"wrld"
0 0 24 3 2 #") "
0 0 17 3 57 #";the case where draw-letters takes in the letters of wrld"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 13 #"overlay/align"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"left\""
0 0 24 3 1 #" "
0 0 19 3 5 #"\"top\""
0 0 17 3 27 #"; the position of the timer"
0 0 24 29 1 #"\n"
0 0 24 3 32 #"                               ("
0 0 14 3 4 #"text"
0 0 24 3 2 #" ("
0 0 14 3 14 #"number->string"
0 0 24 3 2 #" ("
0 0 14 3 5 #"floor"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 14 3 10 #"frame-rate"
0 0 24 3 2 #" ("
0 0 14 3 10 #"World-time"
0 0 24 3 1 #" "
0 0 14 3 4 #"wrld"
0 0 24 3 5 #")))) "
0 0 14 3 12 #"counter-size"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"gray\""
0 0 24 3 2 #") "
0 0 17 3 15 #";image of timer"
0 0 24 29 1 #"\n"
0 0 24 3 32 #"                               ("
0 0 14 3 13 #"overlay/align"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"right\""
0 0 24 3 1 #" "
0 0 19 3 5 #"\"top\""
0 0 24 3 1 #" "
0 0 17 3 78
(
 #";the position of the counter that keeps track of the number of lette"
 #"rs correct"
) 0 0 24 29 1 #"\n"
0 0 24 3 47 #"                                              ("
0 0 14 3 4 #"text"
0 0 24 3 2 #" ("
0 0 14 3 14 #"number->string"
0 0 24 3 2 #" ("
0 0 14 3 21 #"World-letters-correct"
0 0 24 3 1 #" "
0 0 14 3 4 #"wrld"
0 0 24 3 2 #"))"
0 0 14 3 12 #"counter-size"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"gray\""
0 0 24 3 2 #") "
0 0 17 3 21 #";image of the counter"
0 0 24 29 1 #"\n"
0 0 24 3 47 #"                                              ("
0 0 14 3 13 #"overlay/align"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"center\""
0 0 24 3 1 #" "
0 0 19 3 5 #"\"top\""
0 0 24 3 1 #" "
0 0 17 3 26 #";the position of the score"
0 0 24 29 1 #"\n"
0 0 24 3 62
#"                                                             ("
0 0 14 3 4 #"text"
0 0 24 3 2 #" ("
0 0 14 3 14 #"number->string"
0 0 24 3 2 #" ("
0 0 14 3 11 #"World-score"
0 0 24 3 1 #" "
0 0 14 3 4 #"wrld"
0 0 24 3 3 #")) "
0 0 14 3 12 #"counter-size"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"gray\""
0 0 24 3 2 #") "
0 0 17 3 71
(
 #";image of the score                                                 "
 #"   "
) 0 0 24 29 1 #"\n"
0 0 24 3 61
#"                                                             "
0 0 14 3 10 #"background"
0 0 24 3 2 #") "
0 0 17 3 22 #";overlaying background"
0 0 24 29 1 #"\n"
0 0 24 3 47 #"                                              )"
0 0 24 29 1 #"\n"
0 0 24 3 32 #"                               )"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                )"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  )"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 117
(
 #";-------------------------------------------------------------------"
 #"-------------------------------------------------"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 71
(
 #";purpose: animating the image of a letter with the changed y coordin"
 #"ate"
) 0 0 24 29 1 #"\n"
0 0 17 3 44 #";signature: letter-position->letter-position"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";examples:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 14 #"animate-letter"
0 0 24 3 2 #" ("
0 0 14 3 20 #"make-letter-position"
0 0 24 3 1 #" "
0 0 21 3 3 #"#\\D"
0 0 24 3 1 #" "
0 0 14 3 11 #"half-screen"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 20 #"make-letter-position"
0 0 24 3 1 #" "
0 0 21 3 3 #"#\\D"
0 0 24 3 1 #" "
0 0 14 3 11 #"half-screen"
0 0 24 3 1 #" "
0 0 14 3 18 #"start-letter-speed"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              )"
0 0 24 29 1 #"\n"
0 0 17 3 46 #";stub: (define (animate-letter letter-psn) -1)"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 6 #";code:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 14 #"animate-letter"
0 0 24 3 1 #" "
0 0 14 3 10 #"letter-psn"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 20 #"make-letter-position"
0 0 24 3 1 #" "
0 0 17 3 34 #";creating letter position where..."
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 22 #"letter-position-letter"
0 0 24 3 1 #" "
0 0 14 3 10 #"letter-psn"
0 0 24 3 2 #") "
0 0 17 3 49 #";animate-letter takes in the letter of letter-psn"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 17 #"letter-position-x"
0 0 24 3 1 #" "
0 0 14 3 10 #"letter-psn"
0 0 24 3 2 #") "
0 0 17 3 24 #";and the x of letter-psn"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 17 #"letter-position-y"
0 0 24 3 1 #" "
0 0 14 3 10 #"letter-psn"
0 0 24 3 2 #") "
0 0 14 3 18 #"start-letter-speed"
0 0 24 3 2 #") "
0 0 17 3 68
#";and the y of letter-psn, which the y is added to start-letter-speed"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 21 #"letter-position-color"
0 0 24 3 1 #" "
0 0 14 3 10 #"letter-psn"
0 0 24 3 2 #") "
0 0 17 3 28 #";and the color of letter-psn"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   )"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  )"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 117
(
 #";-------------------------------------------------------------------"
 #"-------------------------------------------------"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 41 #";Purpose: create a random letter-position"
0 0 24 29 1 #"\n"
0 0 17 3 30 #";Signature: -> letter-position"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";Examples:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 17 #"letter-position-y"
0 0 24 3 2 #" ("
0 0 14 3 27 #"make-random-letter-position"
0 0 24 3 1 #" "
0 0 14 3 11 #"start-world"
0 0 24 3 3 #")) "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 6 #";Stub:"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 6 #";Code:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 27 #"make-random-letter-position"
0 0 24 3 1 #" "
0 0 14 3 4 #"wrld"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 20 #"make-letter-position"
0 0 24 3 1 #" "
0 0 17 3 34 #";making a letter position where..."
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 13 #"random-letter"
0 0 24 3 2 #" ("
0 0 14 3 13 #"World-letters"
0 0 24 3 1 #" "
0 0 14 3 4 #"wrld"
0 0 24 3 3 #")) "
0 0 17 3 30 #";the letter is a random letter"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 5 #"new-x"
0 0 24 3 2 #" ("
0 0 14 3 13 #"World-letters"
0 0 24 3 1 #" "
0 0 14 3 4 #"wrld"
0 0 24 3 3 #")) "
0 0 17 3 27 #";the x is a random position"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 17 3 12 #";the y is 0 "
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 10 #"vector-ref"
0 0 24 3 1 #" "
0 0 14 3 13 #"letter-colors"
0 0 24 3 2 #" ("
0 0 14 3 6 #"random"
0 0 24 3 2 #" ("
0 0 14 3 13 #"vector-length"
0 0 24 3 1 #" "
0 0 14 3 13 #"letter-colors"
0 0 24 3 4 #"))) "
0 0 17 3 32 #";and the color is a random color"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   )"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  )"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 117
(
 #";-------------------------------------------------------------------"
 #"-------------------------------------------------"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 33 #";Purpose: Animate image of letter"
0 0 24 29 1 #"\n"
0 0 17 3 26 #";Signature: World -> World"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";Examples:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"tick-handler"
0 0 24 3 1 #" "
0 0 14 3 11 #"start-world"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 10 #"make-World"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 20 #"make-letter-position"
0 0 24 3 1 #" "
0 0 21 3 3 #"#\\D"
0 0 24 3 1 #" "
0 0 14 3 11 #"half-screen"
0 0 24 3 1 #" "
0 0 14 3 18 #"start-letter-speed"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 3 #")) "
0 0 21 3 2 #"11"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 14 3 18 #"start-letter-speed"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 38 #";Stub: (define (tick-handler wrld) -1)"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 6 #";Code:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 12 #"tick-handler"
0 0 24 3 1 #" "
0 0 14 3 4 #"wrld"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 3 1 #" "
0 0 17 3 27 #";set of conditions where..."
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    (("
0 0 14 3 6 #"empty?"
0 0 24 3 2 #" ("
0 0 14 3 13 #"World-letters"
0 0 24 3 1 #" "
0 0 14 3 4 #"wrld"
0 0 24 3 3 #")) "
0 0 17 3 49 #";if the list of letters in wrld is empty, then..."
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 10 #"make-World"
0 0 24 3 1 #" "
0 0 17 3 24 #";create a world where..."
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 27 #"make-random-letter-position"
0 0 24 3 1 #" "
0 0 14 3 4 #"wrld"
0 0 24 3 3 #")) "
0 0 17 3 63
#";the list of letters of the world is of random letter positions"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #" ("
0 0 14 3 10 #"World-time"
0 0 24 3 1 #" "
0 0 14 3 4 #"wrld"
0 0 24 3 3 #")) "
0 0 17 3 55 #";the timer of the wrld is added by 1 (time advancement)"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 21 #"World-letters-correct"
0 0 24 3 1 #" "
0 0 14 3 4 #"wrld"
0 0 24 3 2 #") "
0 0 17 3 50 #";the number of letters correct is the same as wrld"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 11 #"World-score"
0 0 24 3 1 #" "
0 0 14 3 4 #"wrld"
0 0 24 3 2 #") "
0 0 17 3 30 #";the score of wrld is the same"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 11 #"World-speed"
0 0 24 3 1 #" "
0 0 14 3 4 #"wrld"
0 0 24 3 2 #") "
0 0 17 3 54 #";and the speed of the letters in the world is the same"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      )"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"     ) "
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 3 #"and"
0 0 24 3 2 #"  "
0 0 17 3 26 #";if it's true that both..."
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 8 #"integer?"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 14 3 10 #"frame-rate"
0 0 24 3 2 #" ("
0 0 14 3 10 #"World-time"
0 0 24 3 1 #" "
0 0 14 3 4 #"wrld"
0 0 24 3 4 #"))) "
0 0 17 3 55 #";wrld's time multiplied by frame-rate is an integer and"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 1 #"<"
0 0 24 3 2 #" ("
0 0 14 3 6 #"length"
0 0 24 3 2 #" ("
0 0 14 3 13 #"World-letters"
0 0 24 3 1 #" "
0 0 14 3 4 #"wrld"
0 0 24 3 3 #")) "
0 0 21 3 1 #"3"
0 0 24 3 2 #") "
0 0 17 3 41 #";the length of wrld's list is less than 3"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"      ) "
0 0 17 3 8 #";then..."
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 10 #"make-World"
0 0 24 3 1 #" "
0 0 17 3 24 #";create a world where..."
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 6 #"append"
0 0 24 3 1 #" "
0 0 17 3 36 #";we append new letter at end of list"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 13 #"World-letters"
0 0 24 3 1 #" "
0 0 14 3 4 #"wrld"
0 0 24 3 2 #") "
0 0 17 3 15 #";wrld's letters"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 27 #"make-random-letter-position"
0 0 24 3 1 #" "
0 0 14 3 4 #"wrld"
0 0 24 3 3 #")) "
0 0 17 3 40 #";and the list of random letter positions"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"       ) "
0 0 17 3 47 #";which this will be the world's list of letters"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #" ("
0 0 14 3 10 #"World-time"
0 0 24 3 1 #" "
0 0 14 3 4 #"wrld"
0 0 24 3 3 #")) "
0 0 17 3 55 #";the timer of the wrld is added by 1 (time advancement)"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 21 #"World-letters-correct"
0 0 24 3 1 #" "
0 0 14 3 4 #"wrld"
0 0 24 3 2 #") "
0 0 17 3 50 #";the number of letters correct is the same as wrld"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 11 #"World-score"
0 0 24 3 1 #" "
0 0 14 3 4 #"wrld"
0 0 24 3 2 #") "
0 0 17 3 30 #";the score of wrld is the same"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 11 #"World-speed"
0 0 24 3 1 #" "
0 0 14 3 4 #"wrld"
0 0 24 3 2 #") "
0 0 17 3 54 #";and the speed of the letters in the world is the same"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      )"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     )"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 4 #"else"
0 0 24 3 1 #" "
0 0 17 3 13 #";otherwise..."
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 10 #"make-World"
0 0 24 3 1 #" "
0 0 17 3 23 #";make a whole new world"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 3 #"map"
0 0 24 3 1 #" "
0 0 14 3 14 #"animate-letter"
0 0 24 3 2 #" ("
0 0 14 3 13 #"World-letters"
0 0 24 3 1 #" "
0 0 14 3 4 #"wrld"
0 0 24 3 3 #")) "
0 0 17 3 57 #";where we apply animate-letter to all the letters in wrld"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #" ("
0 0 14 3 10 #"World-time"
0 0 24 3 1 #" "
0 0 14 3 4 #"wrld"
0 0 24 3 3 #")) "
0 0 17 3 55 #";the timer of the wrld is added by 1 (time advancement)"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 21 #"World-letters-correct"
0 0 24 3 1 #" "
0 0 14 3 4 #"wrld"
0 0 24 3 2 #") "
0 0 17 3 50 #";the number of letters correct is the same as wrld"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 11 #"World-score"
0 0 24 3 1 #" "
0 0 14 3 4 #"wrld"
0 0 24 3 2 #") "
0 0 17 3 30 #";the score of wrld is the same"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 11 #"World-speed"
0 0 24 3 1 #" "
0 0 14 3 4 #"wrld"
0 0 24 3 2 #") "
0 0 17 3 54 #";and the speed of the letters in the world is the same"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      )"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     )"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    )"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  )"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 117
(
 #";-------------------------------------------------------------------"
 #"-------------------------------------------------"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 75
(
 #";Purpose: Given a x value, return a x value that doesn't overlap eac"
 #"hother."
) 0 0 24 29 1 #"\n"
0 0 17 3 45 #";Signature: Number Letter-position -> Boolean"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";Examples:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 8 #"overlap?"
0 0 24 3 1 #" "
0 0 14 3 11 #"half-screen"
0 0 24 3 2 #" ("
0 0 14 3 20 #"make-letter-position"
0 0 24 3 1 #" "
0 0 21 3 3 #"#\\D"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 2 #"31"
0 0 24 3 1 #" "
0 0 14 3 11 #"half-screen"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 3 #")) "
0 0 14 3 5 #"false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 8 #"overlap?"
0 0 24 3 1 #" "
0 0 14 3 11 #"half-screen"
0 0 24 3 2 #" ("
0 0 14 3 20 #"make-letter-position"
0 0 24 3 1 #" "
0 0 21 3 3 #"#\\D"
0 0 24 3 1 #" "
0 0 14 3 11 #"half-screen"
0 0 24 3 1 #" "
0 0 21 3 2 #"31"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 3 #")) "
0 0 14 3 5 #"false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 8 #"overlap?"
0 0 24 3 1 #" "
0 0 14 3 11 #"half-screen"
0 0 24 3 2 #" ("
0 0 14 3 20 #"make-letter-position"
0 0 24 3 1 #" "
0 0 21 3 3 #"#\\D"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 2 #"30"
0 0 24 3 1 #" "
0 0 14 3 11 #"half-screen"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 3 #")) "
0 0 14 3 4 #"true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 8 #"overlap?"
0 0 24 3 1 #" "
0 0 14 3 11 #"half-screen"
0 0 24 3 2 #" ("
0 0 14 3 20 #"make-letter-position"
0 0 24 3 1 #" "
0 0 21 3 3 #"#\\D"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 11 #"half-screen"
0 0 24 3 1 #" "
0 0 21 3 2 #"31"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 3 #")) "
0 0 14 3 5 #"false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 8 #";Stub: ("
0 0 17 3 6 #"define"
0 0 17 3 2 #" ("
0 0 17 3 8 #"overlap?"
0 0 17 3 1 #" "
0 0 17 3 1 #"x"
0 0 17 3 1 #" "
0 0 17 3 10 #"letter-psn"
0 0 17 3 2 #") "
0 0 17 3 3 #"-1)"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 8 #"overlap?"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 11 #"letter-posn"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 3 1 #" "
0 0 17 3 27 #";set of conditions where..."
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    (("
0 0 14 3 1 #"<"
0 0 24 3 2 #" ("
0 0 14 3 17 #"letter-position-x"
0 0 24 3 1 #" "
0 0 14 3 11 #"letter-posn"
0 0 24 3 3 #") ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 11 #"letter-size"
0 0 24 3 3 #")) "
0 0 14 3 5 #"false"
0 0 24 3 2 #") "
0 0 17 3 84
(
 #";if the x of letter-posn is less than the inputted x minus letter-si"
 #"ze, output false"
) 0 0 24 29 1 #"\n"
0 0 24 3 6 #"    (("
0 0 14 3 1 #">"
0 0 24 3 2 #" ("
0 0 14 3 17 #"letter-position-x"
0 0 24 3 1 #" "
0 0 14 3 11 #"letter-posn"
0 0 24 3 3 #") ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 11 #"letter-size"
0 0 24 3 3 #")) "
0 0 14 3 5 #"false"
0 0 24 3 2 #") "
0 0 17 3 86
(
 #";if the x of letter-posn is greater than the inputted x plus letter-"
 #"size, output false"
) 0 0 24 29 1 #"\n"
0 0 24 3 6 #"    (("
0 0 14 3 1 #">"
0 0 24 3 2 #" ("
0 0 14 3 17 #"letter-position-y"
0 0 24 3 1 #" "
0 0 14 3 11 #"letter-posn"
0 0 24 3 2 #") "
0 0 14 3 11 #"letter-size"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 2 #") "
0 0 17 3 70
(
 #";if the y of letter-posn is greater than the letter-size, output fal"
 #"se"
) 0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 4 #"else"
0 0 24 3 1 #" "
0 0 17 3 13 #";otherwise..."
0 0 24 29 1 #"\n"
0 0 24 3 5 #"     "
0 0 14 3 4 #"true"
0 0 24 3 2 #") "
0 0 17 3 12 #";output true"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    )"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  )"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 117
(
 #";-------------------------------------------------------------------"
 #"-------------------------------------------------"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 46 #";Purpose: Check if the list of letters overlap"
0 0 24 29 1 #"\n"
0 0 17 3 51 #";Signature: Number ListOfLetterPositions -> Boolean"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";Examples:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 13 #"list-overlap?"
0 0 24 3 1 #" "
0 0 14 3 11 #"half-screen"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 4 #"list"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 20 #"make-letter-position"
0 0 24 3 1 #" "
0 0 21 3 3 #"#\\D"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 11 #"screen-size"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 20 #"make-letter-position"
0 0 24 3 1 #" "
0 0 21 3 3 #"#\\C"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 11 #"screen-size"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 20 #"make-letter-position"
0 0 24 3 1 #" "
0 0 21 3 3 #"#\\E"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 11 #"screen-size"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 )"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                )"
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 14 3 4 #"true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 13 #"list-overlap?"
0 0 24 3 1 #" "
0 0 14 3 11 #"half-screen"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 4 #"list"
0 0 24 3 17 #"                 "
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 20 #"make-letter-position"
0 0 24 3 1 #" "
0 0 21 3 3 #"#\\C"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 11 #"screen-size"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 20 #"make-letter-position"
0 0 24 3 1 #" "
0 0 21 3 3 #"#\\E"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 11 #"screen-size"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 20 #"make-letter-position"
0 0 24 3 1 #" "
0 0 21 3 3 #"#\\D"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 11 #"screen-size"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 )"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                )"
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 14 3 4 #"true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 13 #"list-overlap?"
0 0 24 3 1 #" "
0 0 14 3 11 #"half-screen"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 4 #"()) "
0 0 14 3 5 #"false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 40 #";Stub: (define (list-overlap? x lst) -1)"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";Template:"
0 0 24 29 1 #"\n"
0 0 17 3 30 #";(define (list-overlap? x lst)"
0 0 24 29 1 #"\n"
0 0 17 3 6 #";(cond"
0 0 24 29 1 #"\n"
0 0 17 3 12 #";((...) ...)"
0 0 24 29 1 #"\n"
0 0 17 3 12 #";((...) ...)"
0 0 24 29 1 #"\n"
0 0 17 3 12 #";((...) ...)"
0 0 24 29 1 #"\n"
0 0 17 3 12 #";((...) ...)"
0 0 24 29 1 #"\n"
0 0 17 3 13 #";(else ...)))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 7 #";Code: "
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 13 #"list-overlap?"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 3 #"lst"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 3 1 #" "
0 0 17 3 27 #";set of conditions where..."
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    (("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 3 #"lst"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 2 #") "
0 0 17 3 34 #";if the lst is empty, output false"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    (("
0 0 14 3 8 #"overlap?"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 3 #"lst"
0 0 24 3 3 #")) "
0 0 14 3 4 #"true"
0 0 24 3 2 #") "
0 0 17 3 73
(
 #";if it's true that a letter overlaps the first letter of lst, output"
 #" true"
) 0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 4 #"else"
0 0 24 3 1 #" "
0 0 17 3 13 #";otherwise..."
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 13 #"list-overlap?"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 3 #"lst"
0 0 24 3 3 #")) "
0 0 17 3 55 #";recursively see if this applies to the rest of the lst"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     )"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    )"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  )"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 117
(
 #";-------------------------------------------------------------------"
 #"-------------------------------------------------"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 59
#";Purpose: Return a random x-coordinate that doesn't overlap"
0 0 24 29 1 #"\n"
0 0 17 3 43 #";Signature: ListofLetterPositions -> Number"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";Examples:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 2 #"or"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 1 #"<"
0 0 24 3 2 #" ("
0 0 14 3 5 #"new-x"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 4 #"list"
0 0 24 3 17 #"                 "
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 20 #"make-letter-position"
0 0 24 3 1 #" "
0 0 21 3 3 #"#\\E"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 11 #"screen-size"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       )"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      )"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 11 #"screen-size"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 2 #") "
0 0 14 3 11 #"letter-size"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     )"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 1 #">"
0 0 24 3 2 #" ("
0 0 14 3 5 #"new-x"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 4 #"list"
0 0 24 3 17 #"                 "
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 20 #"make-letter-position"
0 0 24 3 1 #" "
0 0 21 3 3 #"#\\E"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 11 #"screen-size"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       )"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      )"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 11 #"screen-size"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 2 #") "
0 0 14 3 11 #"letter-size"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     )"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  )"
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 14 3 4 #"true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 7 #";Stub:("
0 0 17 3 6 #"define"
0 0 17 3 2 #" ("
0 0 17 3 5 #"new-x"
0 0 17 3 1 #" "
0 0 17 3 3 #"lst"
0 0 17 3 2 #") "
0 0 17 3 10 #"\"Program\")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 6 #";Code:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 5 #"new-x"
0 0 24 3 1 #" "
0 0 14 3 3 #"lst"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 3 #"let"
0 0 24 3 1 #" "
0 0 17 3 42 #";equivalent to define inside of a function"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 8 #"random-x"
0 0 24 3 1 #" "
0 0 17 3 19 #";let random-x be..."
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 6 #"random"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 11 #"screen-size"
0 0 24 3 1 #" "
0 0 14 3 11 #"letter-size"
0 0 24 3 4 #"))) "
0 0 17 3 66
#";a random number between 0 and up to screen-size minus letter-size"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       )"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 13 #"list-overlap?"
0 0 24 3 1 #" "
0 0 14 3 8 #"random-x"
0 0 24 3 1 #" "
0 0 14 3 3 #"lst"
0 0 24 3 2 #") "
0 0 17 3 37 #";if the letters in the lst overlap..."
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 5 #"new-x"
0 0 24 3 1 #" "
0 0 14 3 3 #"lst"
0 0 24 3 2 #") "
0 0 17 3 20 #";then output a new x"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 14 3 8 #"random-x"
0 0 24 3 1 #" "
0 0 17 3 27 #";otherwise, output random-x"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        )"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    )"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  )"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 117
(
 #";-------------------------------------------------------------------"
 #"-------------------------------------------------"
) 0 0 24 29 1 #"\n"
0 9         301 21           0 0           0 49 0 24 29 1 #"\n"
0 0 17 3 112
(
 #";Purpose: Generate letter-position with random letter that doesn't o"
 #"verlap letters that are already in the world"
) 0 0 24 29 1 #"\n"
0 0 17 3 36 #";Signature: World -> Letter-position"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";Examples:"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 50 #";Stub: (define (generate-letter-position wrld) -1)"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 6 #";Code:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 24 #"generate-letter-position"
0 0 24 3 1 #" "
0 0 14 3 4 #"wrld"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 20 #"make-letter-position"
0 0 24 3 1 #" "
0 0 17 3 36 #";creating a letter-position where..."
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 13 #"random-letter"
0 0 24 3 2 #") "
0 0 17 3 30 #";the letter is a random letter"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 5 #"new-x"
0 0 24 3 2 #" ("
0 0 14 3 13 #"World-letters"
0 0 24 3 1 #" "
0 0 14 3 4 #"wrld"
0 0 24 3 3 #")) "
0 0 17 3 17 #";the x is a new x"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 17 3 11 #";and y is 0"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"   ) "
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  )"
0 0 24 29 1 #"\n"
0           0 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 117
(
 #";-------------------------------------------------------------------"
 #"-------------------------------------------------"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 49 #";Purpose: Return Boolean to indicate game is over"
0 0 24 29 1 #"\n"
0 0 17 3 28 #";Signature: World -> Boolean"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";Examples:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 10 #"game-over?"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-World"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 20 #"make-letter-position"
0 0 24 3 1 #" "
0 0 21 3 3 #"#\\D"
0 0 24 3 1 #" "
0 0 14 3 11 #"half-screen"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 11 #"screen-size"
0 0 24 3 1 #" "
0 0 14 3 11 #"letter-size"
0 0 24 3 2 #") "
0 0 19 3 5 #"\"red\""
0 0 24 3 3 #")) "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 14 3 18 #"start-letter-speed"
0 0 24 3 3 #")) "
0 0 21 3 2 #"#t"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 36 #";Stub: (define (game-over? wrld) -1)"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 5 #";Code"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 10 #"game-over?"
0 0 24 3 1 #" "
0 0 14 3 4 #"wrld"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 3 1 #" "
0 0 17 3 27 #";set of conditions where..."
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    (("
0 0 14 3 6 #"empty?"
0 0 24 3 2 #" ("
0 0 14 3 13 #"World-letters"
0 0 24 3 1 #" "
0 0 14 3 4 #"wrld"
0 0 24 3 3 #")) "
0 0 21 3 6 #"#false"
0 0 24 3 2 #") "
0 0 17 3 52 #";if the list of letters of wrld is empty, it's false"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 4 #"else"
0 0 24 3 1 #" "
0 0 17 3 13 #";otherwise..."
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 2 #"<="
0 0 24 3 1 #" "
0 0 14 3 11 #"screen-size"
0 0 24 3 1 #" "
0 0 17 3 42 #";comparing screen size to bottom of letter"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 17 3 12 #";addition of"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 17 #"letter-position-y"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 2 #" ("
0 0 14 3 13 #"World-letters"
0 0 24 3 1 #" "
0 0 14 3 4 #"wrld"
0 0 24 3 4 #"))) "
0 0 17 3 26 #";y posn of the world      "
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 14 3 11 #"letter-size"
0 0 24 3 1 #")"
0 0 17 3 16 #";and letter size"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"         ) "
0 0 17 3 86
(
 #";and if screen size is less than or equal to the sum, then is is tru"
 #"e, otherwise false"
) 0 0 24 29 1 #"\n"
0 0 24 3 6 #"     )"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    )"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  )"
0 0 17 3 67
#"; when the letter meets the bottom of the screen then its game over"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 117
(
 #";-------------------------------------------------------------------"
 #"-------------------------------------------------"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 51 #";Purpose: show the ending screen of a finished game"
0 0 24 29 1 #"\n"
0 0 17 3 26 #";Signature: world -> image"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 9 #";Example:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 9 #"game-over"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-World"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 20 #"make-letter-position"
0 0 24 3 1 #" "
0 0 21 3 3 #"#\\D"
0 0 24 3 1 #" "
0 0 14 3 11 #"half-screen"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 11 #"screen-size"
0 0 24 3 1 #" "
0 0 14 3 11 #"letter-size"
0 0 24 3 2 #") "
0 0 19 3 5 #"\"red\""
0 0 24 3 3 #")) "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 14 3 18 #"start-letter-speed"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 7 #"overlay"
0 0 24 3 2 #" ("
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 19 3 11 #"\"GAME OVER\""
0 0 24 3 1 #" "
0 0 21 3 2 #"70"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                       ("
0 0 14 3 13 #"overlay/align"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"left\""
0 0 24 3 1 #" "
0 0 19 3 5 #"\"top\""
0 0 24 29 1 #"\n"
0 0 24 3 39 #"                                      ("
0 0 14 3 4 #"text"
0 0 24 3 2 #" ("
0 0 14 3 14 #"number->string"
0 0 24 3 2 #" ("
0 0 14 3 10 #"World-time"
0 0 24 3 1 #" "
0 0 14 3 4 #"wrld"
0 0 24 3 3 #")) "
0 0 14 3 12 #"counter-size"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"gray\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 39 #"                                      ("
0 0 14 3 13 #"overlay/align"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"right\""
0 0 24 3 1 #" "
0 0 19 3 5 #"\"top\""
0 0 24 29 1 #"\n"
0 0 24 3 54 #"                                                     ("
0 0 14 3 4 #"text"
0 0 24 3 2 #" ("
0 0 14 3 14 #"number->string"
0 0 24 3 2 #" ("
0 0 14 3 21 #"World-letters-correct"
0 0 24 3 1 #" "
0 0 14 3 4 #"wrld"
0 0 24 3 3 #")) "
0 0 14 3 12 #"counter-size"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"gray\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 54 #"                                                     ("
0 0 14 3 13 #"overlay/align"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"center\""
0 0 24 3 1 #" "
0 0 19 3 8 #"\"center\""
0 0 24 29 1 #"\n"
0 0 24 3 69
(
 #"                                                                    "
 #"("
) 0 0 14 3 4 #"text"
0 0 24 3 2 #" ("
0 0 14 3 14 #"number->string"
0 0 24 3 2 #" ("
0 0 14 3 11 #"World-score"
0 0 24 3 1 #" "
0 0 14 3 4 #"wrld"
0 0 24 3 3 #")) "
0 0 14 3 12 #"counter-size"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"gray\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 69
(
 #"                                                                    "
 #"("
) 0 0 14 3 10 #"draw-scene"
0 0 24 29 1 #"\n"
0 0 24 3 70
(
 #"                                                                    "
 #" ("
) 0 0 14 3 10 #"make-World"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 20 #"make-letter-position"
0 0 24 3 1 #" "
0 0 21 3 3 #"#\\D"
0 0 24 3 1 #" "
0 0 14 3 11 #"half-screen"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 11 #"screen-size"
0 0 24 3 1 #" "
0 0 14 3 11 #"letter-size"
0 0 24 3 2 #") "
0 0 19 3 5 #"\"red\""
0 0 24 3 3 #")) "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 14 3 18 #"start-letter-speed"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 69
(
 #"                                                                    "
 #")"
) 0 0 24 29 1 #"\n"
0 0 24 3 54 #"                                                     )"
0 0 24 29 1 #"\n"
0 0 24 3 39 #"                                      )"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                       )"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              )"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                  "
0 0 24 29 1 #"\n"
0 0 17 3 35 #";Stub: (define (game-over wrld) -1)"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 6 #";Code:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 9 #"game-over"
0 0 24 3 1 #" "
0 0 14 3 4 #"wrld"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 7 #"overlay"
0 0 17 3 47 #"; this overlaying the text on top the old world"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 19 3 11 #"\"GAME OVER\""
0 0 24 3 1 #" "
0 0 21 3 2 #"70"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 2 #") "
0 0 17 3 28 #";creating the game over text"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 13 #"overlay/align"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"left\""
0 0 24 3 1 #" "
0 0 19 3 5 #"\"top\""
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 4 #"text"
0 0 24 3 2 #" ("
0 0 14 3 14 #"number->string"
0 0 24 3 2 #" ("
0 0 14 3 10 #"World-time"
0 0 24 3 1 #" "
0 0 14 3 4 #"wrld"
0 0 24 3 3 #")) "
0 0 14 3 12 #"counter-size"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"gray\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 13 #"overlay/align"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"right\""
0 0 24 3 1 #" "
0 0 19 3 5 #"\"top\""
0 0 24 29 1 #"\n"
0 0 24 3 34 #"                                 ("
0 0 14 3 4 #"text"
0 0 24 3 2 #" ("
0 0 14 3 14 #"number->string"
0 0 24 3 2 #" ("
0 0 14 3 21 #"World-letters-correct"
0 0 24 3 1 #" "
0 0 14 3 4 #"wrld"
0 0 24 3 3 #")) "
0 0 14 3 12 #"counter-size"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"gray\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 34 #"                                 ("
0 0 14 3 13 #"overlay/align"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"center\""
0 0 24 3 1 #" "
0 0 19 3 8 #"\"center\""
0 0 24 29 1 #"\n"
0 0 24 3 49 #"                                                ("
0 0 14 3 4 #"text"
0 0 24 3 2 #" ("
0 0 14 3 14 #"number->string"
0 0 24 3 2 #" ("
0 0 14 3 11 #"World-score"
0 0 24 3 1 #" "
0 0 14 3 4 #"wrld"
0 0 24 3 3 #")) "
0 0 14 3 12 #"counter-size"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"gray\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 49 #"                                                ("
0 0 14 3 10 #"draw-scene"
0 0 24 3 1 #" "
0 0 14 3 4 #"wrld"
0 0 24 3 2 #") "
0 0 17 3 10 #";old world"
0 0 24 29 1 #"\n"
0 0 24 3 49 #"                                                )"
0 0 24 29 1 #"\n"
0 0 24 3 34 #"                                 )"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  )"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   )"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  )"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 117
(
 #";-------------------------------------------------------------------"
 #"-------------------------------------------------"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 73
(
 #"; Purpose: to determine if a letter-position contains a certain char"
 #"acter"
) 0 0 24 29 1 #"\n"
0 0 17 3 49 #"; Signature: letter-position character -> boolean"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 11 #"; Examples:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 22 #"character-in-position?"
0 0 24 3 2 #" ("
0 0 14 3 20 #"make-letter-position"
0 0 24 3 1 #" "
0 0 21 3 3 #"#\\E"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"cyan\""
0 0 24 3 2 #") "
0 0 19 3 3 #"\"E\""
0 0 24 3 2 #") "
0 0 21 3 5 #"#true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 22 #"character-in-position?"
0 0 24 3 2 #" ("
0 0 14 3 20 #"make-letter-position"
0 0 24 3 1 #" "
0 0 21 3 3 #"#\\E"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"cyan\""
0 0 24 3 2 #") "
0 0 19 3 3 #"\"D\""
0 0 24 3 2 #") "
0 0 21 3 6 #"#false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 60
#"; Stub: (define (character-in-position? letter-psn char) -1)"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 6 #";code:"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 22 #"character-in-position?"
0 0 24 3 1 #" "
0 0 14 3 10 #"letter-psn"
0 0 24 3 1 #" "
0 0 14 3 3 #"str"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 6 #"char=?"
0 0 24 3 1 #" "
0 0 17 3 41 #";comparing if two characters are the same"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 22 #"letter-position-letter"
0 0 24 3 1 #" "
0 0 14 3 10 #"letter-psn"
0 0 24 3 2 #") "
0 0 17 3 53 #";the first character being the letter from letter-psn"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 11 #"char-upcase"
0 0 24 3 2 #" ("
0 0 14 3 10 #"string-ref"
0 0 24 3 1 #" "
0 0 14 3 3 #"str"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 3 #")) "
0 0 17 3 59
#";and the second character being str turned into a character"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   )"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  )"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 26 #"character-not-in-position?"
0 0 24 3 1 #" "
0 0 14 3 10 #"letter-psn"
0 0 24 3 1 #" "
0 0 14 3 3 #"str"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 3 #"not"
0 0 24 3 1 #"("
0 0 14 3 6 #"char=?"
0 0 24 3 1 #" "
0 0 17 3 45 #";comparing if two characters are not the same"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 22 #"letter-position-letter"
0 0 24 3 1 #" "
0 0 14 3 10 #"letter-psn"
0 0 24 3 2 #") "
0 0 17 3 53 #";the first character being the letter from letter-psn"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 11 #"char-upcase"
0 0 24 3 2 #" ("
0 0 14 3 10 #"string-ref"
0 0 24 3 1 #" "
0 0 14 3 3 #"str"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 3 #")) "
0 0 17 3 59
#";and the second character being str turned into a character"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       )"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      )"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  )"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 117
(
 #";-------------------------------------------------------------------"
 #"-------------------------------------------------"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 71
(
 #";Purpose: when a letter on screen is typed, a random new letter appe"
 #"ars"
) 0 0 24 29 1 #"\n"
0 0 17 3 30 #";Signature: World Key -> World"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";Examples:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 6 #"empty?"
0 0 24 3 2 #" ("
0 0 14 3 13 #"World-letters"
0 0 24 3 2 #" ("
0 0 14 3 11 #"key-handler"
0 0 24 3 1 #" "
0 0 14 3 11 #"start-world"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"D\""
0 0 24 3 4 #"))) "
0 0 21 3 5 #"#true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 11 #"key-handler"
0 0 24 3 1 #" "
0 0 14 3 11 #"start-world"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"X\""
0 0 24 3 2 #") "
0 0 14 3 11 #"start-world"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 41 #";Stub: (define (key-handler wrld key) -1)"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";Template:"
0 0 24 29 1 #"\n"
0 0 17 3 31 #";(define (key-handler wrld key)"
0 0 24 29 1 #"\n"
0 0 17 3 8 #";  (cond"
0 0 24 29 1 #"\n"
0 0 17 3 20 #";    ((...) ... ...)"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";    (else"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";     ...)"
0 0 24 29 1 #"\n"
0 0 17 3 6 #";    )"
0 0 24 29 1 #"\n"
0 0 17 3 4 #";  )"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 6 #";Code:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"key-handler"
0 0 24 3 1 #" "
0 0 14 3 4 #"wrld"
0 0 24 3 1 #" "
0 0 14 3 3 #"key"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 3 #"not"
0 0 24 3 1 #"("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 17 3 24 #";if list is not empty..."
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 6 #"filter"
0 0 24 3 1 #" "
0 0 17 3 26 #";the list of letters is..."
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 15 3 2 #"\316\273"
0 0 24 3 1 #"("
0 0 14 3 10 #"letter-psn"
0 0 24 3 2 #") "
0 0 17 3 99
(
 #";a list where the characters are verified whether the key is equal t"
 #"o the letter of letter position"
) 0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 22 #"character-in-position?"
0 0 24 3 1 #" "
0 0 14 3 10 #"letter-psn"
0 0 24 3 1 #" "
0 0 14 3 3 #"key"
0 0 24 3 3 #")) "
0 0 17 3 73
(
 #";by using a function that returns a boolean depending on letter posi"
 #"tion "
) 0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 13 #"World-letters"
0 0 24 3 1 #" "
0 0 14 3 4 #"wrld"
0 0 24 3 4 #"))  "
0 0 17 3 49 #";lambda applies operation to each letter position"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"        )  "
0 0 24 29 1 #"\n"
0 0 24 3 9 #"       ) "
0 0 17 3 8 #";then..."
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 10 #"make-World"
0 0 24 3 1 #" "
0 0 17 3 59
#";if it's true, then we have a new world with a faster speed"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 6 #"filter"
0 0 24 3 1 #" "
0 0 17 3 26 #";the list of letters is..."
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 15 3 2 #"\316\273"
0 0 24 3 1 #"("
0 0 14 3 10 #"letter-psn"
0 0 24 3 2 #") "
0 0 17 3 103
(
 #";a list where the characters are verified whether the key is not equ"
 #"al to the letter of letter position"
) 0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 26 #"character-not-in-position?"
0 0 24 3 1 #" "
0 0 14 3 10 #"letter-psn"
0 0 24 3 1 #" "
0 0 14 3 3 #"key"
0 0 24 3 3 #")) "
0 0 17 3 73
(
 #";by using a function that returns a boolean depending on letter posi"
 #"tion "
) 0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 13 #"World-letters"
0 0 24 3 1 #" "
0 0 14 3 4 #"wrld"
0 0 24 3 2 #") "
0 0 17 3 50 #";lambda applies operation to each letter position "
0 0 24 29 1 #"\n"
0 0 24 3 7 #"     ) "
0 0 17 3 69
(
 #";and the list being filtered is the letters of wrld; list of letters"
 #" "
) 0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 10 #"World-time"
0 0 24 3 1 #" "
0 0 14 3 4 #"wrld"
0 0 24 3 2 #") "
0 0 17 3 24 #";wrld's time is the same"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 21 #"World-letters-correct"
0 0 24 3 1 #" "
0 0 14 3 4 #"wrld"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 17 3 49 #";number of letters correct in wrld increases by 1"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 12 #"letter-score"
0 0 24 3 2 #" ("
0 0 14 3 11 #"char-upcase"
0 0 24 3 2 #" ("
0 0 14 3 10 #"string-ref"
0 0 24 3 1 #" "
0 0 14 3 3 #"key"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 5 #"))) ("
0 0 14 3 11 #"World-score"
0 0 24 3 1 #" "
0 0 14 3 4 #"wrld"
0 0 24 3 3 #")) "
0 0 17 3 79
(
 #";the score of wrld is increased depending on what letter is hit on t"
 #"he keyboard"
) 0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 4 #"1.05"
0 0 24 3 2 #" ("
0 0 14 3 11 #"World-speed"
0 0 24 3 1 #" "
0 0 14 3 4 #"wrld"
0 0 24 3 4 #"))  "
0 0 17 3 29 #";wrld's speed increases by 5%"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    )"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 10 #"make-World"
0 0 24 3 1 #" "
0 0 17 3 60
#";if it's not, then we have the old world with a slower speed"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 13 #"World-letters"
0 0 24 3 1 #" "
0 0 14 3 4 #"wrld"
0 0 24 3 2 #") "
0 0 17 3 29 #";wrld's letters are the same "
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 10 #"World-time"
0 0 24 3 1 #" "
0 0 14 3 4 #"wrld"
0 0 24 3 2 #") "
0 0 17 3 24 #";wrld's time is the same"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 21 #"World-letters-correct"
0 0 24 3 1 #" "
0 0 14 3 4 #"wrld"
0 0 24 3 2 #") "
0 0 17 3 46 #";number of letters correct in wrld is the same"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 11 #"World-score"
0 0 24 3 1 #" "
0 0 14 3 4 #"wrld"
0 0 24 3 2 #") "
0 0 17 3 25 #";wrld's score is the same"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 3 #".95"
0 0 24 3 2 #" ("
0 0 14 3 11 #"World-speed"
0 0 24 3 1 #" "
0 0 14 3 4 #"wrld"
0 0 24 3 3 #")) "
0 0 17 3 29 #";wrld's speed decreases by 5%"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    )"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   )"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  )"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 117
(
 #";-------------------------------------------------------------------"
 #"-------------------------------------------------"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 37 #";Purpose: creates a randomized letter"
0 0 24 29 1 #"\n"
0 0 17 3 46 #";signature: ListofLetterPositions -> Character"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";Examples:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 7 #"char>=?"
0 0 24 3 2 #" ("
0 0 14 3 13 #"random-letter"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 3 #")) "
0 0 21 3 3 #"#\\A"
0 0 24 3 2 #") "
0 0 21 3 5 #"#true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 7 #"char<=?"
0 0 24 3 2 #" ("
0 0 14 3 13 #"random-letter"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 3 #")) "
0 0 21 3 3 #"#\\Z"
0 0 24 3 2 #") "
0 0 21 3 5 #"#true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 33 #";Stub: (define (random-letter) 3)"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 6 #";Code:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 13 #"random-letter"
0 0 24 3 1 #" "
0 0 14 3 3 #"lst"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 3 #"let"
0 0 24 3 1 #" "
0 0 17 3 42 #";equivalent to define inside of a function"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 11 #"random-char"
0 0 24 3 1 #" "
0 0 17 3 22 #";let random-char be..."
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 10 #"vector-ref"
0 0 24 3 1 #" "
0 0 14 3 8 #"alphabet"
0 0 24 3 1 #" "
0 0 17 3 33 #";picking an element from alphabet"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 14 3 6 #"random"
0 0 24 3 2 #" ("
0 0 14 3 13 #"vector-length"
0 0 24 3 1 #" "
0 0 14 3 8 #"alphabet"
0 0 24 3 3 #")) "
0 0 17 3 55 #";which the reference is a random number between 0 to 25"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    )"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        )"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       )"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 4 #"cond"
0 0 24 3 1 #" "
0 0 17 3 27 #";set of conditions where..."
0 0 24 29 1 #"\n"
0 0 24 3 8 #"      (("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 3 #"lst"
0 0 24 3 2 #") "
0 0 14 3 11 #"random-char"
0 0 24 3 2 #") "
0 0 17 3 36 #";if lst is empty, output random-char"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"      (("
0 0 14 3 6 #"char=?"
0 0 24 3 2 #" ("
0 0 14 3 22 #"letter-position-letter"
0 0 24 3 2 #" ("
0 0 14 3 8 #"list-ref"
0 0 24 3 1 #" "
0 0 14 3 3 #"lst"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 6 #"length"
0 0 24 3 1 #" "
0 0 14 3 3 #"lst"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 4 #"))) "
0 0 14 3 11 #"random-char"
0 0 24 3 3 #") ("
0 0 14 3 13 #"random-letter"
0 0 24 3 1 #" "
0 0 14 3 3 #"lst"
0 0 24 3 3 #")) "
0 0 17 3 74
(
 #";if the last letter of lst is equal to random-char, output a random "
 #"letter"
) 0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 4 #"else"
0 0 24 3 1 #" "
0 0 17 3 13 #";otherwise..."
0 0 24 29 1 #"\n"
0 0 24 3 7 #"       "
0 0 14 3 11 #"random-char"
0 0 24 3 2 #") "
0 0 17 3 19 #";output random-char"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      )"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    )"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  )"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 117
(
 #";-------------------------------------------------------------------"
 #"-------------------------------------------------"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 83
(
 #";Purpose: create a randomized position of the letter between the wid"
 #"th of the frame"
) 0 0 24 29 1 #"\n"
0 0 17 3 19 #";signature:->number"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";examples:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 1 #">"
0 0 24 3 2 #" ("
0 0 14 3 15 #"random-position"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 2 #") "
0 0 21 3 5 #"#true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 1 #"<"
0 0 24 3 2 #" ("
0 0 14 3 15 #"random-position"
0 0 24 3 3 #") ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 11 #"screen-size"
0 0 24 3 1 #" "
0 0 14 3 11 #"letter-size"
0 0 24 3 3 #")) "
0 0 21 3 5 #"#true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 37 #";Stub: (define (random-position) \"s\")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 6 #";Code:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 15 #"random-position"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 6 #"random"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 11 #"screen-size"
0 0 24 3 1 #" "
0 0 14 3 11 #"letter-size"
0 0 24 3 3 #")) "
0 0 17 3 74
(
 #";creating a random location so that the letter fits within the scree"
 #"n size"
) 0 0 24 29 1 #"\n"
0 0 24 3 3 #"  )"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 117
(
 #";-------------------------------------------------------------------"
 #"-------------------------------------------------"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 106
(
 #";Purpose: For each standard finger letter position, those are worth "
 #"1 point; the others are worth 3 points"
) 0 0 24 29 1 #"\n"
0 0 17 3 26 #";Signature: Char -> Number"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";Examples:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"letter-score"
0 0 24 3 1 #" "
0 0 21 3 3 #"#\\A"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"letter-score"
0 0 24 3 1 #" "
0 0 21 3 3 #"#\\S"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"letter-score"
0 0 24 3 1 #" "
0 0 21 3 3 #"#\\D"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"letter-score"
0 0 24 3 1 #" "
0 0 21 3 3 #"#\\F"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"letter-score"
0 0 24 3 1 #" "
0 0 21 3 3 #"#\\J"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"letter-score"
0 0 24 3 1 #" "
0 0 21 3 3 #"#\\K"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"letter-score"
0 0 24 3 1 #" "
0 0 21 3 3 #"#\\L"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"letter-score"
0 0 24 3 1 #" "
0 0 21 3 3 #"#\\Q"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 37 #";Stub:(define (letter-score char) -1)"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";Template:"
0 0 24 29 1 #"\n"
0 0 17 3 28 #";(define (letter-score char)"
0 0 24 29 1 #"\n"
0 0 17 3 8 #";  (cond"
0 0 24 29 1 #"\n"
0 0 17 3 15 #";    ((...)...)"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";    (else"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";     ...)"
0 0 24 29 1 #"\n"
0 0 17 3 6 #";    )"
0 0 24 29 1 #"\n"
0 0 17 3 4 #";  )"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 11 #";hash table"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"1-point"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 9 #"make-hash"
0 0 24 3 1 #" "
0 0 17 3 30 #";creates a hash table where..."
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 3 #"#\\A"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 17 3 42 #";the standard finger keyboard positions..."
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 3 #"#\\S"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 17 3 18 #";are worth 1 point"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 3 #"#\\D"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 3 #"#\\F"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 3 #"#\\J"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 3 #"#\\K"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 3 #"#\\L"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         )"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   )"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  )"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 6 #";Code:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 12 #"letter-score"
0 0 24 3 1 #" "
0 0 14 3 4 #"char"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 3 1 #" "
0 0 17 3 27 #";set of conditions where..."
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    (("
0 0 14 3 13 #"hash-has-key?"
0 0 24 3 1 #" "
0 0 14 3 7 #"1-point"
0 0 24 3 1 #" "
0 0 14 3 4 #"char"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 17 3 40 #";if chara has a key in 1-point, output 1"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 4 #"else"
0 0 24 3 1 #" "
0 0 17 3 10 #";otherwise"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"     "
0 0 21 3 1 #"3"
0 0 24 3 2 #") "
0 0 17 3 9 #";output 3"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    )"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  )"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 117
(
 #";-------------------------------------------------------------------"
 #"-------------------------------------------------"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 8 #"big-bang"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-World"
0 0 24 3 1 #" "
0 0 17 3 17 #";creating a world"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 4 #"list"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"           "
0 0 21 3 1 #"0"
0 0 24 3 2 #"  "
0 0 17 3 13 #";world's time"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"           "
0 0 21 3 1 #"0"
0 0 24 3 2 #"  "
0 0 17 3 39 #";number of letters correct in the world"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"           "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 17 3 14 #";world's score"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 14 3 18 #"start-letter-speed"
0 0 24 3 2 #") "
0 0 17 3 14 #";world's speed"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 7 #"on-draw"
0 0 24 3 1 #" "
0 0 14 3 10 #"draw-scene"
0 0 24 3 2 #") "
0 0 17 3 19 #";generates an image"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 7 #"on-tick"
0 0 24 3 1 #" "
0 0 14 3 12 #"tick-handler"
0 0 24 3 1 #" "
0 0 14 3 10 #"frame-rate"
0 0 24 3 2 #") "
0 0 17 3 39 #";animates the falling letters and timer"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 9 #"stop-when"
0 0 24 3 1 #" "
0 0 14 3 10 #"game-over?"
0 0 24 3 1 #" "
0 0 14 3 9 #"game-over"
0 0 24 3 2 #") "
0 0 17 3 33 #";tells the animation when to stop"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 6 #"on-key"
0 0 24 3 1 #" "
0 0 14 3 11 #"key-handler"
0 0 24 3 2 #") "
0 0 17 3 36 #";allows the user to use the keyboard"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  )"
0           0
